package main

import (
	"context"
	"fmt"
	"log"
	"net/http"
	"time"

	"example/hello/go/pkg/mod/github.com/julienschmidt/httprouter@v1.3.0"

	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

var client *mongo.Client

type User struct {
	ID       string `json:"_id,omitempty" bson:"_id,omitempty"`
	Name     string `json:"name,omitempty" bson:"name,omitempty"`
	Email    string `json:"email,omitempty" bson:"email,omitempty"`
	Password string `json:"password,omitempty" bson:"password,omitempty"`
}

type Post struct {
	ID            string `json:"_id,omitempty" bson:"_id,omitempty"`
	caption       string `json:"caption,omitempty" bson:"caption,omitempty"`
	Imageurl      string `json:"image url,omitempty" bson:"image url,omitempty"`
	PostTimestamp string `json:"post timestamp,omitempty" bson:"post timestamp,omitempty"`
}

func CreateUserEndpoint(response http.ResponseWriter, request *http.Request) {}
func GetUserEndpoint(response http.ResponseWriter, request *http.Request)    {}
func CreatePostEndpoint(response http.ResponseWriter, request *http.Request) {}
func GetPostEndpoint(response http.ResponseWriter, request *http.Request)    {}


//func GetPersonEndpoint(response http.ResponseWriter, request *http.Request) { }

func main() {
	fmt.Println("Starting the application...")
	ctx, _ := context.WithTimeout(context.Background(), 10*time.Second)
	clientOptions := options.Client().ApplyURI("mongodb+srv://subiksha:srimathi98@appointy.lzymv.mongodb.net/appointy?retryWrites=true&w=majority")
	client, _ = mongo.Connect(ctx, clientOptions)
	collection := client.Database("appointy").Collection("user")
	ash := User{"subiksha_p06", "P subiksha", "subikshapanchabakesan@gmail.com", "srimathi98"}
	router := httprouter.New()
	var result Book
	err = booksCollection.FindOne(context.TODO(), filter).Decode(&result)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Printf("Found a single document: %+v\n", result)
	router.HandleFunc("/users", CreateUserEndpoint).Methods("POST")
	router.HandleFunc("/users/{ID}", GetUserEndpoint).Methods("GET")
	router.HandleFunc("/posts", CreatePostEndpoint).Methods("POST")
	router.HandleFunc("/posts/{ID}", GetPostEndpoint).Methods("GET")
	//router.HandleFunc("/person/{id}", GetPersonEndpoint).Methods("GET")
	http.ListenAndServe(":12345", router)

}
